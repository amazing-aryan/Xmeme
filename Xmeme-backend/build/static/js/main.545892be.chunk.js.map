{"version":3,"sources":["services/xmeme.js","components/MemeForm.js","components/Memes.js","App.js","index.js"],"names":["baseUrl","service","getRecent","axios","get","then","response","data","getById","id","create","newObject","post","MemeForm","props","className","value","newName","onChange","handleNameChange","newURL","handleURLChange","newCaption","handleCaptionChange","type","onClick","addMeme","MemeList","memes","map","meme","src","url","alt","name","caption","Memes","console","log","App","useState","setMemes","setNewName","setNewURL","setNewCaption","useEffect","MemeService","returnedMemes","event","target","preventDefault","memeObject","returnedId","concat","catch","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOACMA,EAAU,SAmBDC,EAFC,CAAEC,UAfA,WAEd,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAahBC,QAVb,SAACC,GAEb,OADgBN,IAAMC,IAAN,UAAaJ,EAAb,YAAwBS,IACzBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQPG,OALvB,SAAAC,GAEX,OADiBR,IAAMS,KAAKZ,EAASW,GACtBN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,eCG9BM,EAfE,SAACC,GACd,OACI,gCACA,mDACI,iCACI,sBAAKC,UAAU,YAAf,mBAAiC,uBAAOC,MAAOF,EAAMG,QAASC,SAAUJ,EAAMK,sBAC9E,sBAAKJ,UAAU,YAAf,kBAAgC,uBAAOC,MAAOF,EAAMM,OAAQF,SAAUJ,EAAMO,qBAC5E,sBAAKN,UAAU,YAAf,sBAAoC,uBAAOC,MAAOF,EAAMQ,WAAYJ,SAAUJ,EAAMS,yBACpF,wBACA,8BAAK,wBAAQC,KAAK,SAASC,QAASX,EAAMY,QAArC,+BCTfC,G,MAAW,SAACb,GAAD,OAAWA,EAAMc,MAAMC,KAAI,SAAAC,GACxC,OACI,oBAAIf,UAAU,aAAd,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SAA4B,qBAAKgB,IAAKD,EAAKE,IAAKC,IAAI,OACpD,sBAAKlB,UAAU,eAAf,UACI,oBAAIA,UAAU,aAAd,SAA4Be,EAAKI,OACjC,mBAAGnB,UAAU,YAAb,SAA0Be,EAAKK,uBAmBpCC,EAZD,SAACtB,GAEX,OADAuB,QAAQC,IAAIxB,EAAMc,OAEd,sBAAKb,UAAU,OAAf,UACI,8CACA,oBAAIA,UAAU,QAAd,SACI,cAAC,EAAD,CAAUa,MAAOd,EAAMc,cC+BxBW,EAjDH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTZ,EADS,KACFa,EADE,OAEcD,mBAAS,IAFvB,mBAETvB,EAFS,KAEAyB,EAFA,OAGYF,mBAAS,IAHrB,mBAGTpB,EAHS,KAGDuB,EAHC,OAIoBH,mBAAS,IAJ7B,mBAITlB,EAJS,KAIGsB,EAJH,KAMhBC,qBAAU,WACRC,EACG5C,YACAG,MAAK,SAAA0C,GACJN,EAASM,QAEZ,IA6BH,OACE,gCACA,cAAC,EAAD,CAAU9B,QAASA,EAASE,iBA7BL,SAAC6B,GAAD,OAAWN,EAAWM,EAAMC,OAAOjC,QA6BMI,OAAQA,EAAQC,gBA3B1D,SAAC2B,GAAD,OAAWL,EAAUK,EAAMC,OAAOjC,QA2B0DM,WAAYA,EAAYC,oBAzBhH,SAACyB,GAAD,OAAWJ,EAAcI,EAAMC,OAAOjC,QAyBoHU,QAvBtK,SAACsB,GACfA,EAAME,iBACN,IAAMC,EAAa,CACjBjB,KAAMjB,EACNe,IAAKZ,EACLe,QAASb,GAEXwB,EACCpC,OAAOyC,GACP9C,MAAK,SAAA+C,GACJD,EAAW1C,GAAK2C,EAChBX,EAAS,CAACU,GAAYE,OAAOzB,OAE9B0B,OAAM,SAAAC,GACLlB,QAAQC,IAAIiB,MAEdX,EAAc,IACdF,EAAW,IACXC,EAAU,OAMV,cAAC,EAAD,CAAOf,MAAOA,QC5ClB4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.545892be.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/memes'\r\n\r\nconst getRecent = () => {\r\n    const promise = axios.get(baseUrl)\r\n    return promise.then(response => response.data)\r\n}\r\n\r\nconst getById = (id) => {\r\n    const promise = axios.get(`${baseUrl}/${id}`)\r\n    return promise.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const promise  = axios.post(baseUrl, newObject)\r\n    return promise.then(response => response.data)\r\n}\r\n\r\nconst service = { getRecent, getById, create}\r\n\r\nexport default service\r\n\r\n","import React from 'react'\r\nimport './memeform.css'\r\n\r\nconst MemeForm = (props) => {\r\n    return (\r\n        <div>\r\n        <h1>Submit a new Meme</h1>\r\n            <form>\r\n                <div className=\"input-box\">Name: <input value={props.newName} onChange={props.handleNameChange} /></div>\r\n                <div className=\"input-box\">URL: <input value={props.newURL} onChange={props.handleURLChange} /></div>\r\n                <div className=\"input-box\">Caption: <input value={props.newCaption} onChange={props.handleCaptionChange} /></div>\r\n                <div></div>\r\n                <div><button type=\"submit\" onClick={props.addMeme}>Add Meme</button></div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MemeForm","import React from 'react'\r\nimport './memes.css'\r\n\r\nconst MemeList = (props) => props.memes.map(meme => {\r\n    return (\r\n        <li className=\"cards_item\">\r\n            <div className=\"card\">\r\n                <div className=\"card_image\"><img src={meme.url} alt=\"\"></img></div>\r\n                <div className=\"card_content\">\r\n                    <h2 className=\"card_title\">{meme.name}</h2>\r\n                    <p className=\"card_text\">{meme.caption}</p>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    )\r\n})\r\n\r\nconst Memes = (props) => {\r\n    console.log(props.memes);\r\n    return (\r\n        <div className=\"main\">\r\n            <h1>Recent Memes</h1>\r\n            <ul className=\"cards\">\r\n                <MemeList memes={props.memes} />\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Memes","import React, { useState, useEffect } from 'react'\nimport MemeService from './services/xmeme'\nimport MemeForm from './components/MemeForm'\nimport Memes from './components/Memes'\n\nconst App = () => {\n  const [memes, setMemes] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newURL, setNewURL] = useState('')\n  const [newCaption, setNewCaption] = useState('')\n\n  useEffect(() => {\n    MemeService\n      .getRecent()\n      .then(returnedMemes => {\n        setMemes(returnedMemes)\n      })\n  }, [])\n\n  const handleNameChange = (event) => setNewName(event.target.value)\n\n  const handleURLChange = (event) => setNewURL(event.target.value)\n\n  const handleCaptionChange = (event) => setNewCaption(event.target.value)\n\n  const addMeme = (event) => {\n    event.preventDefault();\n    const memeObject = {\n      name: newName,\n      url: newURL,\n      caption: newCaption\n    }\n    MemeService\n    .create(memeObject)\n    .then(returnedId => {\n      memeObject.id = returnedId\n      setMemes([memeObject].concat(memes))\n    })\n    .catch(error => {\n      console.log(error)\n    })\n    setNewCaption('')\n    setNewName('')\n    setNewURL('')\n  }\n\n  return (\n    <div>\n    <MemeForm newName={newName} handleNameChange={handleNameChange} newURL={newURL} handleURLChange={handleURLChange} newCaption={newCaption} handleCaptionChange={handleCaptionChange} addMeme={addMeme} />\n    <Memes memes={memes} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}